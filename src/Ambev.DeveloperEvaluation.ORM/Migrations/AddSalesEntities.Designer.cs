// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ambev.DeveloperEvaluation.ORM.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20241014011203_AddSalesEntities")]
    partial class AddSalesEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Customer", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                b.Property<string>("Cpf")
                    .IsRequired()
                    .HasMaxLength(14)
                    .HasColumnType("character varying(14)");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("character varying(100)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("character varying(100)");

                b.Property<string>("Phone")
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnType("character varying(20)");

                b.Property<string>("Status")
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnType("character varying(20)");

                b.HasKey("Id");

                b.ToTable("Customers");
            });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Product", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                b.Property<string>("Description")
                    .HasColumnType("text");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("character varying(100)");

                b.Property<decimal>("Price")
                    .HasColumnType("numeric");

                b.Property<string>("Status")
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnType("character varying(20)");

                b.HasKey("Id");

                b.ToTable("Products");
            });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Sale", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                b.Property<int>("CustomerId")
                    .HasColumnType("integer");

                b.Property<bool>("IsCancelled")
                    .HasColumnType("boolean");

                b.Property<DateTime>("SaleDate")
                    .HasColumnType("timestamp without time zone");

                b.Property<decimal>("TotalAmount")
                    .HasColumnType("numeric");

                b.HasKey("Id");

                b.HasIndex("CustomerId");

                b.ToTable("Sales");
            });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.SaleItem", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                b.Property<decimal>("Discount")
                    .HasColumnType("numeric");

                b.Property<bool>("IsCancelled")
                    .HasColumnType("boolean");

                b.Property<int>("ProductId")
                    .HasColumnType("integer");

                b.Property<int>("Quantity")
                    .HasColumnType("integer");

                b.Property<int>("SaleId")
                    .HasColumnType("integer");

                b.Property<decimal>("TotalPrice")
                    .HasColumnType("numeric");

                b.Property<decimal>("UnitPrice")
                    .HasColumnType("numeric");

                b.HasKey("Id");

                b.HasIndex("ProductId");

                b.HasIndex("SaleId");

                b.ToTable("SaleItems");
            });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Sale", b =>
            {
                b.HasOne("Ambev.DeveloperEvaluation.Domain.Entities.Customer", "Customer")
                    .WithMany("Sales")
                    .HasForeignKey("CustomerId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Customer");
            });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.SaleItem", b =>
            {
                b.HasOne("Ambev.DeveloperEvaluation.Domain.Entities.Product", "Product")
                    .WithMany()
                    .HasForeignKey("ProductId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("Ambev.DeveloperEvaluation.Domain.Entities.Sale", "Sale")
                    .WithMany("Items")
                    .HasForeignKey("SaleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Product");

                b.Navigation("Sale");
            });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Customer", b =>
            {
                b.Navigation("Sales");
            });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Sale", b =>
            {
                b.Navigation("Items");
            });
#pragma warning restore 612, 618
        }
    }
}